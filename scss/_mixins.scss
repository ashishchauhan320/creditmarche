// All Mixins here

//Add solid border
@mixin add-border($size, $color, $position: all) {
  @if $position == 'top' {
    border-top: $size solid $color;
  } @else
  if $position == 'bottom' {
    border-bottom: $size solid $color;
  } @else
  if $position == 'right' {
    border-right: $size solid $color;
  } @else
  if $position == 'left' {
    border-left: $size solid $color;
  } @else
  if $position == 'top-bottom' {
    border-top: $size solid $color;
    border-bottom: $size solid $color;
  } @else
  if $position == 'right-left' {
    border-left: $size solid $color;
    border-right: $size solid $color;
  } @else
  if $position == 'all' {
    border: $size solid $color;
  }
}

//links
@mixin is_link ($link, $hover, $active) {
  & {
    color: $link;

    &:hover {
      color: $hover;
    }

    &:active,
    &:focus {
      color: $active;
    }
  }
}
// Border Radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
}
// Box Shadow
@mixin box-shadow($shadow_value) {

     -webkit-box-shadow:$shadow_value; 
     -moz-box-shadow:$shadow_value;
     box-shadow:$shadow_value;
   }
@mixin no-boxshadow {
  -webkit-box-shadow: none;
  box-shadow: none;
}
// Hide from both screenreaders and browsers
@mixin hidden {
  display: none;
  visibility: hidden;
}

// Appearance
@mixin appearance ($value) {
  -webkit-appearance: $value;
  -moz-appearance: $value;
  appearance: $value;
}
// Unselectable
@mixin unselectable {
  -webkit-touch-callout: none;
  user-select: none;
}
// Regular transition
@mixin transition($transition) {
   -moz-transition:    $transition;
   -o-transition:      $transition;
   -webkit-transition: $transition;
   transition:         $transition;
}
@mixin no-transition {
  -webkit-transition: none;
  transition: none;
}
@mixin vertical-center{
   
   display: inline-block;vertical-align: middle;
}
// generic transform
//For Multiple transform: @include transform(rotate(-20deg) scale(1) skew(-20deg) translate(-40px));
@mixin transform($transforms) {
  -webkit-transform: $transforms;
  transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
// scale
@mixin scale($scale) {
  @include transform(scale($scale));
}
// translate
@mixin translate ($x, $y) {
  @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}
// Translate 3d
@mixin translate3d($x:0, $y:0, $z:0) {
  -ms-transform: translate3d($x, $y, $z);
  -webkit-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}
// Cross browser opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
// Cross browser Placeholders
@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }

  &:-moz-placeholder {
    @content;
    @include opacity(1);
  }

  &::-moz-placeholder {
    @content;
    @include opacity(1);
  }

  &:-ms-input-placeholder {
    @content;
  }
}


//Circle
@mixin circle($size) {
  height: $size;
  width: $size;
  @include border-radius(100%);
}

//Show 3 dots after text without wrapping down
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

//Background properties
//Usage @include bg-cover(cover, top left);
@mixin bg-cover($size : cover , $position: center) {
  background-repeat: no-repeat;
  background-position: $position;
  background-size: $size;
}

//Flexbox concept
@mixin flexbox {
  display: -webkit-box; // old
  display: -moz-box; // old
  display: -ms-flexbox; // ie
  display: -webkit-flex; // new
  display: flex; // new
}
// Media queries
@mixin breakpoint($point) {
  @if $point == x-large {
    @media only screen and (min-width:1500px) {
      @content;
    }
  }
  @if $point == large {
    @media only screen and (max-width:1499px) {
      @content;
    }
  }
  @if $point == normal {
    @media only screen and (max-width:1199px) {
      @content;
    }
  } @else
  if $point == ipad {
    @media only screen and (max-width: 991px) {
      @content;
    }
  } @else
  if $point == mobile {
    @media only screen and (max-width: 767px) {
      @content;
    }
  } @else
  if $point == mobile-s {
    @media only screen and (max-width: 479px) {
      @content;
    }
  }
}